"use strict";angular.module("rumca-js",["ui.bootstrap"]),angular.module("rumca-js").controller("GUI",["$scope","$document","Keyboard","DSP",function(a,b,c,d){a.keyboard=c,a.dsp=d,b.bind("keydown",function(b){-1===c.activeKeys.indexOf(b.keyCode)&&a.$apply(function(){c.keydown(b.keyCode)})}),b.bind("keyup",function(b){a.$apply(function(){c.keyup(b.keyCode)})}),a.$watch("dsp.osc1.type",d.setOsc1Type),a.$watch("dsp.osc2.type",d.setOsc2Type),a.$watch("dsp.osc1.octave",d.setOsc1Octave),a.$watch("dsp.osc2.octave",d.setOsc2Octave),a.$watch("dsp.osc1.detune.value",d.setOsc1Detune),a.$watch("dsp.osc2.detune.value",d.setOsc2Detune),a.$watch("dsp.oscMix",d.setOscMix),a.$watch("dsp.filter.type",d.setFilterType),a.$watch("dsp.filter.cutoff",d.setFilterFreq),a.$watch("dsp.filter.Q.value",d.setFilterQ),a.$watch("dsp.filterLFO.frequency.value",d.setFilterLFOFreq),a.$watch("dsp.filterLFOGain.gain.value",d.setFilterLFOGain),a.$watch("dsp.distortion.amount",d.distortion.updateCurve)}]),angular.module("rumca-js").factory("Keyboard",["DSP",function(a){var b=[],c=[];return b[90]=31,b[83]=32,b[88]=33,b[68]=34,b[67]=35,b[86]=36,b[71]=37,b[66]=38,b[72]=39,b[78]=40,b[74]=41,b[77]=42,b[188]=43,b[76]=44,b[190]=45,b[186]=46,b[191]=47,b[81]=48,b[50]=49,b[87]=50,b[51]=51,b[69]=52,b[52]=53,b[82]=54,b[84]=55,b[54]=56,b[89]=57,b[55]=58,b[85]=59,b[73]=60,b[57]=61,b[79]=62,b[48]=63,b[80]=64,b[189]=65,b[219]=66,b[187]=67,{activeKeys:c,keydown:function(b){c.push(b);var d=this.frequencyFromNoteNumber(b);d&&a.noteOn(d,b)},keyup:function(b){c.splice(c.indexOf(b),1);var d=this.frequencyFromNoteNumber(b);d&&a.noteOff(d,b)},frequencyFromNoteNumber:function(a){var c=b[a];return 440*Math.pow(2,(c-69)/12)}}}]),angular.module("rumca-js").factory("DSP",["$window","Voice",function(a,b){function c(a,b){f.forEach(function(c){c&&c[a](b)})}var d=a.AudioContext||a.webkitAudioContext,e=new d,f=[],g=e.createGain(),h=e.createWaveShaper(),i=e.createGain();g.connect(e.destination),g.gain.value=.05,h.connect(g),h.makeDistCurve=function(a){for(var b,c="number"==typeof a?a:50,d=44100,e=new Float32Array(d),f=Math.PI/180,g=0;d>g;++g)b=2*g/d-1,e[g]=(3+c)*b*20*f/(Math.PI+c*Math.abs(b));return e},h.updateCurve=function(a){0===a?i.connect(g):(i.connect(h),h.curve=h.makeDistCurve(Number(a)))},h.amount=0,h.oversample="4x",i.gain.value=.8,i.connect(h),h.updateCurve(h.amount);var j={attack:.1,decay:.3,sustain:.7,release:2},k={attack:.1,decay:.6,sustain:.7,release:2},l={type:"lowpass",Q:{value:7},cutoff:9,modEnv:50},m={gain:{value:0}},n={frequency:{value:0}},o={type:"sawtooth",octave:0,detune:{value:0}},p={type:"triangle",octave:-1,detune:{value:0}},q=50;return{ctx:e,osc1:o,osc2:p,oscMix:q,volEnv:j,filter:l,filterLFO:n,filterLFOGain:m,filterEnv:k,voiceChain:i,master:g,distortion:h,noteOn:function(a,c){f[c]||(f[c]=new b(a,this))},noteOff:function(a,b){f[b]&&(f[b].noteOff(this),f[b]=null)},setOsc1Type:function(a){c("setOsc1Type",a)},setOsc1Octave:function(a){c("setOsc1Octave",a)},setOsc2Type:function(a){c("setOsc2Type",a)},setOsc2Octave:function(a){c("setOsc2Octave",a)},setOsc1Detune:function(a){c("setOsc1Detune",a)},setOsc2Detune:function(a){c("setOsc2Detune",a)},setOscMix:function(a){c("setOscMix",a)},setFilterType:function(a){c("setFilterType",a)},setFilterFreq:function(a){c("setFilterFreq",a)},setFilterQ:function(a){c("setFilterQ",a)},setFilterLFOFreq:function(a){c("setFilterLFOFreq",a)},setFilterLFOGain:function(a){c("setFilterLFOGain",a)}}}]),angular.module("rumca-js").factory("Voice",function(){var a=function(a,b){var c=b.ctx.currentTime;this.volEnv=b.ctx.createGain(),this.volEnv.gain.cancelScheduledValues(c),this.volEnv.gain.setValueAtTime(0,c),this.volEnv.gain.linearRampToValueAtTime(1,c+Number(b.volEnv.attack)),this.volEnv.gain.setTargetAtTime(Number(b.volEnv.sustain),c+Number(b.volEnv.attack),Number(b.volEnv.decay)+.001),this.volEnv.connect(b.voiceChain),this.filter=b.ctx.createBiquadFilter(),this.filter.type=b.filter.type,this.filter.Q.value=b.filter.Q.value,this.filter.frequency.value=Math.pow(2,b.filter.cutoff),this.filter.connect(this.volEnv),this.filter.attackLevel=72*b.filter.modEnv,this.filter.sustainLevel=this.filter.attackLevel*b.filterEnv.sustain,this.filter.detune.setValueAtTime(0,c),this.filter.detune.linearRampToValueAtTime(this.filter.attackLevel,c+Number(b.filterEnv.attack)),this.filter.detune.setTargetAtTime(this.filter.sustainLevel,c+Number(b.filterEnv.attack),Number(b.filterEnv.decay)),this.filterLFOGain=b.ctx.createGain(),this.filterLFOGain.gain.value=b.filterLFOGain.gain.value,this.filterLFOGain.connect(this.filter.frequency),this.filterLFO=b.ctx.createOscillator(),this.filterLFO.frequency.value=b.filterLFO.frequency.value,this.filterLFO.connect(this.filterLFOGain),this.filterLFO.start(c),this.osc1=b.ctx.createOscillator(),this.note=a,this.osc1.frequency.value=a*Math.pow(2,b.osc1.octave),this.osc1.detune.value=b.osc1.detune.value,this.osc1.type=b.osc1.type,this.osc1.gain=b.ctx.createGain(),this.osc1.gain.gain.value=1-Number(b.oscMix)/100,this.osc1.connect(this.osc1.gain),this.osc1.gain.connect(this.filter),this.osc1.start(c),this.osc2=b.ctx.createOscillator(),this.note=a,this.osc2.frequency.value=a*Math.pow(2,b.osc2.octave),this.osc2.detune.value=b.osc2.detune.value,this.osc2.type=b.osc2.type,this.osc2.gain=b.ctx.createGain(),this.osc2.gain.gain.value=1-this.osc1.gain.gain.value,this.osc2.connect(this.osc2.gain),this.osc2.gain.connect(this.filter),this.osc2.start(c)};return a.prototype.noteOff=function(a){var b=a.ctx.currentTime,c=b+Number(a.volEnv.release);this.volEnv.gain.cancelScheduledValues(b),this.volEnv.gain.setValueAtTime(this.volEnv.gain.value,b),this.volEnv.gain.setTargetAtTime(0,b,Number(a.volEnv.release)/10),this.filter.detune.cancelScheduledValues(b),this.filter.detune.setTargetAtTime(0,b,Number(a.filterEnv.release)/10),this.osc1.stop(c),this.osc2.stop(c)},a.prototype.setOsc1Type=function(a){this.osc1.type=a},a.prototype.setOsc2Type=function(a){this.osc2.type=a},a.prototype.setOsc1Octave=function(a){this.osc1.frequency.value=this.note*Math.pow(2,a)},a.prototype.setOsc2Octave=function(a){this.osc2.frequency.value=this.note*Math.pow(2,a)},a.prototype.setOsc1Detune=function(a){this.osc1.detune.value=a},a.prototype.setOsc2Detune=function(a){this.osc2.detune.value=a},a.prototype.setOscMix=function(a){this.osc1.gain.gain.value=1-a/100,this.osc2.gain.gain.value=1-this.osc1.gain.gain.value},a.prototype.setFilterType=function(a){this.filter.type=a},a.prototype.setFilterFreq=function(a){this.filter.frequency.value=Math.pow(2,a)},a.prototype.setFilterQ=function(a){this.filter.Q.value=a},a.prototype.setFilterLFOFreq=function(a){this.filterLFO.frequency.value=a},a.prototype.setFilterLFOGain=function(a){this.filterLFOGain.gain.value=a},a}),angular.module("rumca-js").run(["$templateCache",function(a){a.put("views/filter-envelope.html",'<div class="panel panel-default well well-sm"> <div class="panel-heading"> <h3 class="panel-title">Filter Envelope</h3> </div> <div class="panel-body"> <label>Attack</label> <input type="range" ng-model="dsp.filterEnv.attack" min="0" max="5" step="0.01"> <label>Decay</label> <input type="range" ng-model="dsp.filterEnv.decay" min="0" max="1" step="0.01"> <label>Sustain</label> <input type="range" ng-model="dsp.filterEnv.sustain" min="0" max="1" step="0.01"> <label>Release</label> <input type="range" ng-model="dsp.filterEnv.release" min="0" max="10" step="0.01"> </div> </div>'),a.put("views/filter.html",'<div class="panel panel-default well well-sm"> <div class="panel-heading"> <h3 class="panel-title">Filter</h3> </div> <div class="panel-body"> <label>Filter type</label> <br> <div class="btn-group btn-group-justified"> <label class="btn btn-primary" ng-model="dsp.filter.type" btn-radio="\'lowpass\'">LP</label> <label class="btn btn-primary" ng-model="dsp.filter.type" btn-radio="\'highpass\'">HP</label> <label class="btn btn-primary" ng-model="dsp.filter.type" btn-radio="\'bandpass\'">BP</label> </div> <hr> <label>Frequency</label> <input type="range" ng-model="dsp.filter.cutoff" min="0" max="15" step="0.1"> <label>Resonance</label> <input type="range" ng-model="dsp.filter.Q.value" min="0" max="20" step="0.1"> <hr> <label>Mod Env</label> <input type="range" ng-model="dsp.filter.modEnv" min="0" max="100" step="1"> <hr> <label>Filter LFO frequency</label> <input type="range" ng-model="dsp.filterLFO.frequency.value" min="0" max="20" step="0.1"> <label>Filter LFO gain</label> <input type="range" ng-model="dsp.filterLFOGain.gain.value" min="0" max="150" step="0.1"> </div> </div>'),a.put("views/keyboard.html",'<div class="piano" tooltip="Use your keyboard to play notes!" tooltip-trigger="mouseenter" tooltip-placement="top"> <div class="piano-container"> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(90) > -1}"> <span class="letter-white text-center"><h4>Z</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(83) > -1}"> <span class="letter-black text-center"><h4>S</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(88) > -1}"> <span class="letter-white text-center"><h4>X</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(68) > -1}"> <span class="letter-black text-center"><h4>D</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(67) > -1}"> <span class="letter-white text-center"><h4>C</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(86) > -1}"> <span class="letter-white text-center"><h4>V</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(71) > -1}"> <span class="letter-black text-center"><h4>G</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(66) > -1}"> <span class="letter-white text-center"><h4>B</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(72) > -1}"> <span class="letter-black text-center"><h4>H</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(78) > -1}"> <span class="letter-white text-center"><h4>N</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(74) > -1}"> <span class="letter-black text-center"><h4>J</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(77) > -1}"> <span class="letter-white text-center"><h4>M</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(188) > -1}"> <span class="letter-white text-center"><h4>,</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(76) > -1}"> <span class="letter-black text-center"><h4>L</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(190) > -1}"> <span class="letter-white text-center"><h4>.</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(186) > -1}"> <span class="letter-black text-center"><h4>;</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(191) > -1}"> <span class="letter-white text-center"><h4>/</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(81) > -1}"> <span class="letter-white text-center"><h4>Q</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(50) > -1}"> <span class="letter-black text-center"><h4>2</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(87) > -1}"> <span class="letter-white text-center"><h4>W</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(51) > -1}"> <span class="letter-black text-center"><h4>3</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(69) > -1}"> <span class="letter-white text-center"><h4>E</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(52) > -1}"> <span class="letter-black text-center"><h4>4</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(82) > -1}"> <span class="letter-white text-center"><h4>R</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(84) > -1}"> <span class="letter-white text-center"><h4>T</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(54) > -1}"> <span class="letter-black text-center"><h4>6</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(89) > -1}"> <span class="letter-white text-center"><h4>Y</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(55) > -1}"> <span class="letter-black text-center"><h4>7</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(85) > -1}"> <span class="letter-white text-center"><h4>U</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(73) > -1}"> <span class="letter-white text-center"><h4>I</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(57) > -1}"> <span class="letter-black text-center"><h4>9</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(79) > -1}"> <span class="letter-white text-center"><h4>O</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(48) > -1}"> <span class="letter-black text-center"><h4>0</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(80) > -1}"> <span class="letter-white text-center"><h4>P</h4></span> </div> <div class="black" ng-class="{active: keyboard.activeKeys.indexOf(189) > -1}"> <span class="letter-black text-center"><h4>-</h4></span> </div> </li> <li> <div class="white" ng-class="{active: keyboard.activeKeys.indexOf(219) > -1}"> <span class="letter-white text-center"><h4>[</h4></span> </div> </li> </div> </div>'),a.put("views/master.html",'<div class="panel panel-default well well-sm"> <div class="panel-heading"> <h3 class="panel-title"> Master Controls </h3> </div> <div class="panel-body"> <label>Osc 1 / Osc 2 Mix</label> <input type="range" ng-model="dsp.oscMix" min="0" max="100" step="1"> <label>Dist Amount</label> <input type="range" ng-model="dsp.distortion.amount" min="0" max="100" step="1"> <hr> <label>Master Volume</label> <input type="range" ng-model="dsp.master.gain.value" min="0" max="1" step="0.01"> </div> </div>'),a.put("views/osc-mix.html",'<div class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title"> Osc Mix </h3> </div> <div class="panel-body"> </div> </div>'),a.put("views/osc1.html",'<div class="panel panel-default well well-sm"> <div class="panel-heading"> <h3 class="panel-title">Oscillator 1</h3> </div> <div class="panel-body text-center"> <label>Waveform</label> <div class="btn-group btn-group-justified"> <label class="btn btn-primary" ng-model="dsp.osc1.type" btn-radio="\'sine\'">Sine</label> <label class="btn btn-primary" ng-model="dsp.osc1.type" btn-radio="\'square\'">Square</label> <label class="btn btn-primary" ng-model="dsp.osc1.type" btn-radio="\'sawtooth\'">Saw</label> <label class="btn btn-primary" ng-model="dsp.osc1.type" btn-radio="\'triangle\'">Triangle</label> </div> <hr> <label>Detune</label><span class="text-small"> {{dsp.osc1.detune.value}} cents</span> <input type="range" min="-24" max="24" ng-model="dsp.osc1.detune.value"> <hr> <label>Octave</label> <br> <div class="btn-group btn-group-justified"> <label class="btn btn-primary" ng-model="dsp.osc1.octave" btn-radio="-1">-1</label> <label class="btn btn-primary" ng-model="dsp.osc1.octave" btn-radio="0">0</label> <label class="btn btn-primary" ng-model="dsp.osc1.octave" btn-radio="1">+1</label> </div> </div> </div>'),a.put("views/osc2.html",'<div class="panel panel-default well well-sm"> <div class="panel-heading"> <h3 class="panel-title">Oscillator 2</h3> </div> <div class="panel-body text-center"> <label>Waveform</label> <div class="btn-group btn-group-justified"> <label class="btn btn-primary" ng-model="dsp.osc2.type" btn-radio="\'sine\'">Sine</label> <label class="btn btn-primary" ng-model="dsp.osc2.type" btn-radio="\'square\'">Square</label> <label class="btn btn-primary" ng-model="dsp.osc2.type" btn-radio="\'sawtooth\'">Saw</label> <label class="btn btn-primary" ng-model="dsp.osc2.type" btn-radio="\'triangle\'">Triangle</label> </div> <hr> <label>Detune</label><span class="text-small"> {{dsp.osc2.detune.value}} cents</span> <input type="range" min="-24" max="24" ng-model="dsp.osc2.detune.value"> <hr> <label>Octave</label> <br> <div class="btn-group btn-group-justified"> <label class="btn btn-primary" ng-model="dsp.osc2.octave" btn-radio="-1">-1</label> <label class="btn btn-primary" ng-model="dsp.osc2.octave" btn-radio="0">0</label> <label class="btn btn-primary" ng-model="dsp.osc2.octave" btn-radio="1">+1</label> </div> </div> </div> '),a.put("views/volume-envelope.html",'<div class="panel panel-default well well-sm"> <div class="panel-heading"> <h3 class="panel-title">Volume Envelope</h3> </div> <div class="panel-body"> <label>Attack</label> <input type="range" ng-model="dsp.volEnv.attack" min="0.05" max="5" step="0.01"> <label>Decay</label> <input type="range" ng-model="dsp.volEnv.decay" min="0" max="1" step="0.01"> <label>Sustain</label> <input type="range" ng-model="dsp.volEnv.sustain" min="0" max="1" step="0.01"> <label>Release</label> <input type="range" ng-model="dsp.volEnv.release" min="0" max="10" step="0.01"> </div> </div>')}]);